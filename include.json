{"0": {"name": "Time", "function": "mice.getScenarioClock()", "class": "Tools", "description": "Returns the time elapsed from scenario starting, in seconds.", "argc": 0, "argv": {}}, "1": {"name": "Speed", "function": "mice.getSpeed(%s)", "class": "Position", "description": "Returns the speed of the vehicle in kilometers per hour. The value is negative if the vehicle is driving in reverse.", "argc": 1, "argv": {"Vehicle ID": "0"}}, "2": {"name": "Position X", "function": "mice.getPositionVector(%s,0)", "class": "Position", "description": "Returns x of specified vehicle rear axle center position vector in the terrain database referential. This function works on interactive and autonomous vehicles.", "argc": 1, "argv": {"Vehicle ID": "0"}}, "3": {"name": "Position Y", "function": "mice.getPositionVector(%s,1)", "class": "Position", "description": "Returns y of specified vehicle rear axle center position vector in the terrain database referential. This function works on interactive and autonomous vehicles.", "argc": 1, "argv": {"Vehicle ID": "0"}}, "4": {"name": "Acceleration X", "function": "mice.getAccelerationVector(0,0)", "class": "Position", "description": "This function only works on interactive vehicles. 0.0 is returned if the specified vehicle is not interactive.", "argc": 0, "argv": {}}, "5": {"name": "Speed X", "function": "mice.getSpeedVector(0,0)", "class": "Position", "description": "A float value in meters per seconds for x direction. This function only works on interactive vehicles. 0.0 is returned if the specified vehicle is not interactive.", "argc": 0, "argv": {}}, "6": {"name": "Speed Y", "function": "mice.getSpeedVector(0,1)", "class": "Position", "description": "A float value in meters per seconds for y direction. This function only works on interactive vehicles. 0.0 is returned if the specified vehicle is not interactive.", "argc": 0, "argv": {}}, "7": {"name": "Collision State", "function": "mice.getCollisionState(0)", "class": "Vehicle", "description": "Returns the state of the specified interactive vehicle concerning the \"ollision\" functionality which is activated with the setCollisionActivation action. Needs TRAFFIC process running. -1 for: \"collision functionality not activated\" or \"vehicle not interactive\". 0 for NORMAL. 1 for FROZEN. 2 for DISPLACED", "argc": 0, "argv": {}}, "8": {"name": "Road Identifier", "function": "mice.getRoadIdentifier(%s)", "class": "Road", "description": "Return the value corresponding to the road on which the specified vehicle is driving.", "argc": 1, "argv": {"Vehicle ID": "0"}}, "9": {"name": "Brake Force", "function": "mice.getBrakePedal(0)", "class": "Vehicle", "description": "Returns the force applied on the brake pedal : 0 if released.", "argc": 0, "argv": {}}, "10": {"name": "Lane Number", "function": "mice.getLane(%s)", "class": "Road", "description": "Returns the number associated to the lane on which the vehicle is driving. The value of the lane number increases according to the principles shown in the following figures: Lanes are sorted from right to left according to the direction of the specified vehicle. Right lane is lane #1, left lane is lane # Number_of_lanes (of the road).", "argc": 1, "argv": {"Vehicle ID": "0"}}, "11": {"name": "Trip Meter", "function": "mice.getTripMeter(%s)", "class": "Position", "description": "Returns, in meters, the distance covered by the vehicle since the beginning of the scenario. If the vehicle is moved by SCANeR GUI or setPosition, then the tripmeter is not reset to 0 but the new result integrates the translation distance.", "argc": 1, "argv": {"Vehicle ID": "0"}},"12": {"name": "Lane Lateral Shift", "function": "mice.getLaneLateralShift(%s)", "class": "Position", "description": "Returns, the lateral lane shift", "argc": 1, "argv": {"Vehicle ID": "0"}}}